{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "JSON schema for SKY UX CLI skyuxconfig.json",
  "definitions": {
    "externalFileCSS": {
      "type": "object",
      "properties": {
        "url": {
          "description": "Fully qualified URL of the file.",
          "type": "string"
        },
        "integrity": {
          "description": "Subresource integrity string to include.",
          "type": "string"
        }
      }
    },
    "externalFileJS": {
      "allOf":[
        {
          "$ref": "#/definitions/externalFileCSS"
        },
        {
          "properties": {
            "head": {
              "description": "Inject in the head versus before the closing body tag.",
              "type": "boolean"
            }
          }
        }
      ]
    }
  },
  "properties": {
    "a11y": {
      "description": "Enables or disables accessibility test rules. You can manage rules individually, or you can enable or disable all rules in bulk.",
      "type": [
        "object",
        "boolean"
      ],
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "app": {
      "description": "Specifies configuration options for the local app when running skyux serve",
      "type": "object",
      "properties": {
        "title": {
          "description": "Controls the page title at the template level while waiting for the application to load.",
          "type": "string"
        },
        "port": {
          "description": "Configures a port for the skyux serve command to use. If no port is specified, skyux serve dynamically finds an available port.",
          "type": "string"
        },
        "externals": {
          "description": "Dynamically injects CSS and JavaScript files into SKY UX Host. You should have a specific use-case for an externals and they must be white-listed by the SKY UX team.",
          "type": "object",
          "properties": {
            "css": {
              "description": "CSS files to inject",
              "type": "object",
              "properties": {
                "before": {
                  "description": "CSS files to inject before default SKY UX files.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/externalFileCSS"
                  }
                },
                "after": {
                  "description": "CSS files to inject after default SKY UX files.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/externalFileCSS"
                  }
                }
              }
            },
            "js": {
              "description": "JS files to inject",
              "type": "object",
              "properties": {
                "before": {
                  "description": "JS files to inject before default SKY UX files.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/externalFileJS"
                  }
                },
                "after": {
                  "description": "JS files to inject before default SKY UX files.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/externalFileJS"
                  }
                }
              }
            }
          }
        }
      }
    },
    "appSettings": {
      "description": "Specifies data that is available for reuse throughout the application.",
      "type": "object"
    },
    "auth": {
      "description": "Indicates whether the application requires an authenticated Blackbaud ID",
      "type": "boolean"
    },
    "codeCoverageThreshold": {
      "description": "Specifies the minimum required code coverage threshold.",
      "type": "string",
      "enum": [
        "none",
        "standard",
        "strict"
      ]
    },
    "compileMode": {
      "description": "Specifies how to compile the project's code.",
      "type": "string",
      "enum": [
        "aot",
        "jit"
      ],
      "default": "aot"
    },
    "cssPath": {
      "description": "Specifies a path to reference CSS styles. This property is specific to the SKY UX docs site and is for internal Blackbaud use only.",
      "type": "string"
    },
    "help": {
      "description": " Indicates whether to automatically include the help widget in the application to identify the current page and display relevant help content. This property is for internal Blackbaud use only.",
      "type": [
        "boolean",
        "object"
      ]
    },
    "host": {
      "description": "Specifies configuration options for communication with SKY UX Host.",
      "type": "object",
      "properties": {
        "url": {
          "description": "Specifies a base URL to pass information from skyux serve to the SKY UX Host.",
          "type": "string",
          "default": "https://host.nxt.blackbaud.com"
        }
      }
    },
    "importPath": {
      "description": "Specifies a path to reference SKY UX components in Angular. This property is specific to the SKY UX docs site and is for internal Blackbaud use only.",
      "type": "string"
    },
    "mode": {
      "description": "Controls how much boilerplate code to generate automatically.",
      "type": "string",
      "enum": [
        "easy",
        "advanced"
      ],
      "default": "easy"
    },
    "name": {
      "description": "Specifies the name of the project when running in SKY UX Host. By default, SKY UX Builder uses the name property in the package.json file, minus the 'blackbaud-skyux-spa-' prefix.",
      "type": "string"
    },
    "omnibar": {
      "description": "Specifies an object to pass to the omnibar's load method. This property is for internal Blackbaud use only.",
      "type": "object",
      "properties": {
        "experimental": {
          "description": "Whether to display the new 'experimental' Omnibar or the traditional one.",
          "type": "boolean"
        }
      }
    },
    "pacts": {
      "description": "PACTS",
      "type": "array"
    },
    "params": {
      "description": "Specifies a list of parameters that are allowed at runtime.",
      "type": [
        "array",
        "object"
      ]
    },
    "plugins": {
      "description": "Specifies plugins to expand on existing SKY UX Builder functionality and create new functionality.",
      "type": "array"
    },
    "redirects": {
      "description": "Specifies redirects for pages within an application using from : to pattern.",
      "type": "object"
    },
    "routes": {
      "description": "Allows you to use the omnibar but still define navigation items. This property is for internal Blackbaud use only.",
      "type": "object",
      "properties": {
        "public": {
          "description": "Public routes.",
          "type": "array"
        },
        "referenced": {
          "description": "Referenced routes.",
          "type": "array"
        }
      }
    },
    "useHashRouting": {
      "description": "Allows your SPA to use Angular's hash location strategy.",
      "type": "boolean"
    }
  }
}
